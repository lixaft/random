#!/usr/bin/env python3
from __future__ import annotations

import argparse
import functools
from typing import Sequence


@functools.lru_cache(None)
def mapping() -> dict[str, str]:
    d = {}
    for c in (65, 97):
        for i in range(26):
            d[chr(i + c)] = chr((i + 13) % 26 + c)
    return d


def get_char(c: str) -> str:
    return mapping().get(c, c)


def rot13(s: str) -> str:
    return "".join(get_char(c) for c in s)


def main(argv: Sequence[str] | None = None) -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument("string")
    args = parser.parse_args(argv)

    print(rot13(args.string))

    return 0


if __name__ == "__main__":
    raise SystemExit(main())
